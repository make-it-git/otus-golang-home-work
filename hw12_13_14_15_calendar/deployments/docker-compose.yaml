version: "3"

services:
  calendar:
    build:
      context: ../
      dockerfile: ./build/calendar.Dockerfile
    ports:
      - "8888:8080"
      - "8889:8081"
    environment:
      STORAGE_CONNECTION_HOST: postgres
      STORAGE_CONNECTION_PORT: 5432
    restart: on-failure
    depends_on:
      migrate:
        condition: service_completed_successfully
      postgres:
        condition: service_started

  scheduler:
    build:
      context: ../
      dockerfile: ./build/scheduler.Dockerfile
    environment:
      STORAGE_CONNECTION_HOST: postgres
      STORAGE_CONNECTION_PORT: 5432
      RABBIT_CONNECTION_HOST: rabbitmq
    restart: on-failure
    depends_on:
      migrate:
        condition: service_completed_successfully
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_started

  sender:
    build:
      context: ../
      dockerfile: ./build/sender.Dockerfile
    environment:
      STORAGE_CONNECTION_HOST: postgres
      STORAGE_CONNECTION_PORT: 5432
      RABBIT_CONNECTION_HOST: rabbitmq
    restart: on-failure
    depends_on:
      migrate:
        condition: service_completed_successfully
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_started

  migrate:
    build:
      context: ../
      dockerfile: ./build/migrate.Dockerfile
    environment:
      STORAGE_CONNECTION_HOST: postgres
      STORAGE_CONNECTION_PORT: 5432
    restart: on-failure
    depends_on:
      postgres:
        condition: service_started

  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: otus
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: otus_password
    ports:
      - "55432:5432"
    volumes:
      - otus_postgresql_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3.10-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - otus_rabbitmq_data:/var/lib/rabbitmq

volumes:
  otus_postgresql_data:
  otus_rabbitmq_data:
